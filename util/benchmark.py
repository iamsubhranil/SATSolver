#!/usr/bin/env python

# Taken from Wren (https://github.com/wren-lang/wren/blob/master/util/benchmark.py)

from __future__ import print_function

import argparse
import math
import os
import os.path
import re
import subprocess
import sys

# Runs the benchmarks.
#
# It runs several benchmarks across several languages. For each
# benchmark/language pair, it runs a number of trials. Each trial is one run of
# a single benchmark script. It spawns a process and runs the script. The
# script itself is expected to output some result which this script validates
# to ensure the benchmark is running correctly. Then the benchmark prints an
# elapsed time. The benchmark is expected to do the timing itself and only time
# the interesting code under test.
#
# This script then runs several trials and takes the best score. (It does
# multiple trials to account for random variance in running time coming from
# OS, CPU rate-limiting, etc.) It takes the best time on the assumption that
# that represents the language's ideal performance and any variance coming from
# the OS will just slow it down.
#
# After running a series of trials the benchmark runner will compare all of the
# language's performance for a given benchmark. It compares by running time
# and score, which is just the inverse running time.
#
# For sat benchmarks, it can also compare against a "baseline". That's a
# recorded result of a previous run of the sat benchmarks. This is useful --
# critical, actually -- for seeing how sat performance changes. Generating a
# set of baselines before a change to the VM and then comparing those to the
# performance after a change is how we track improvements and regressions.
#
# To generate a baseline file, run this script with "--generate-baseline".

if __name__ == "__main__":
    SAT_DIR = os.path.dirname(os.path.dirname(os.path.realpath(__file__)))
    SAT_BIN = SAT_DIR
    BENCHMARK_DIR = os.path.join('benchmarks')

    # How many times to run a given benchmark.
    NUM_TRIALS = 5

    LANGUAGES = [
    ("sat",           [os.path.join(SAT_BIN, 'sat')], ".sat"),
    ("dart",           ["fletch", "run"],                ".dart"),
    ("lua",            ["lua"],                          ".lua"),
    ( "luajit (-joff)", ["luajit", "-joff"],              ".lua"),
    ("python",         ["python"],                       ".py"),
    ("python3",        ["python3"],                      ".py"),
    ("ruby",           ["ruby"],                         ".rb")
    ]

    results = {}

    if sys.platform == 'win32':
        GREEN = NORMAL = RED = YELLOW = ''
    else:
        GREEN = '\033[32m'
        NORMAL = '\033[0m'
        RED = '\033[31m'
        YELLOW = '\033[33m'

    BENCHMARKS = []

def BENCHMARK(name, numvar, solutions):
    message = """Generating bytecode..
Number of variables : """ + str(numvar) + """
Optimizing generated bytecode..
Generating solutions.."""
    temp = solutions
    while solutions > 0:
        message = message + "\n" + r"\d+ : satisfied"
        solutions = solutions - 1
    message = message + """
Satisfied instances : """ + str(temp)
    message = message + "\n" + r"elapsed: (\d+\.\d+)"
    regex = re.compile(message, re.MULTILINE)
    BENCHMARKS.append([name, regex, None])

def green(text):
  return GREEN + text + NORMAL

def red(text):
  return RED + text + NORMAL

def yellow(text):
  return YELLOW + text + NORMAL


def get_score(time):
  """
  Converts time into a "score". This is the inverse of the time with an
  arbitrary scale applied to get the number in a nice range. The goal here is
  to have benchmark results where faster = bigger number.
  """
  return 1000.0 / time


def standard_deviation(times):
  """
  Calculates the standard deviation of a list of numbers.
  """
  mean = sum(times) / len(times)

  # Sum the squares of the differences from the mean.
  result = 0
  for time in times:
    result += (time - mean) ** 2

  return math.sqrt(result / len(times))


def run_trial(benchmark, language):
  """Runs one benchmark one time for one language."""
  executable_args = language[1]

  # Hackish. If the benchmark name starts with "api_", it's testing the sat
  # C API, so run the test_api executable which has those test methods instead
  # of the normal sat build.
  #if benchmark[0].startswith("api_"):
  #  executable_args = [
  #    os.path.join(SAT_DIR, "build", "release", "test", "api_sat")
  #  ]

  args = []
  args.extend(executable_args)
  args.append(os.path.join(BENCHMARK_DIR, benchmark[0] + language[2]))

  try:
    out = subprocess.check_output(args, universal_newlines=True)
    #`print("{" + out + "}\n")
  except OSError:
    print('Interpreter was not found')
    return None
  match = benchmark[1].match(out)
  if match:
    return float(match.group(1))
  else:
    print("Incorrect output:")
    print(out)
    return None


def run_benchmark_language(benchmark, language, benchmark_result):
  """
  Runs one benchmark for a number of trials for one language.

  Adds the result to benchmark_result, which is a map of language names to
  results.
  """

  name = "{0} - {1}".format(benchmark[0], language[0])
  print("{0:30s}".format(name), end=' ')

  if not os.path.exists(os.path.join(
      BENCHMARK_DIR, benchmark[0] + language[2])):
    print("No implementation for this language")
    return

  times = []
  for i in range(0, NUM_TRIALS):
    sys.stdout.flush()
    time = run_trial(benchmark, language)
    if not time:
      return
    times.append(time)
    sys.stdout.write(".")

  best = min(times)
  score = get_score(best)

  comparison = ""
  if language[0] == "sat":
    if benchmark[2] != None:
      ratio = 100 * score / benchmark[2]
      comparison =  "{:6.2f}% relative to baseline".format(ratio)
      if ratio > 105:
        comparison = green(comparison)
      if ratio < 95:
        comparison = red(comparison)
    else:
      comparison = "no baseline"
  else:
    # Hack: assumes sat gets run first.
    sat_score = benchmark_result["sat"]["score"]
    ratio = 100.0 * sat_score / score
    comparison =  "{:6.2f}%".format(ratio)
    if ratio > 105:
      comparison = green(comparison)
    if ratio < 95:
      comparison = red(comparison)

  print(" {:4.2f}s {:4.4f} {:s}".format(
      best,
      standard_deviation(times),
      comparison))

  benchmark_result[language[0]] = {
    "desc": name,
    "times": times,
    "score": score
  }

  return score


def run_benchmark(benchmark, languages, graph):
  """Runs one benchmark for the given languages (or all of them)."""

  benchmark_result = {}
  results[benchmark[0]] = benchmark_result

  num_languages = 0
  for language in LANGUAGES:
    if not languages or language[0] in languages:
      num_languages += 1
      run_benchmark_language(benchmark, language, benchmark_result)

  if num_languages > 1 and graph:
    graph_results(benchmark_result)


def graph_results(benchmark_result):
  print()

  INCREMENT = {
    '-': 'o',
    'o': 'O',
    'O': '0',
    '0': '0'
  }

  # Scale everything by the highest score.
  highest = 0
  for language, result in benchmark_result.items():
    score = get_score(min(result["times"]))
    if score > highest: highest = score

  print("{0:30s}0 {1:66.0f}".format("", highest))
  for language, result in benchmark_result.items():
    line = ["-"] * 68
    for time in result["times"]:
      index = int(get_score(time) / highest * 67)
      line[index] = INCREMENT[line[index]]
    print("{0:30s}{1}".format(result["desc"], "".join(line)))
  print()


def read_baseline():
  baseline_file = os.path.join(BENCHMARK_DIR, "baseline.txt")
  if os.path.exists(baseline_file):
    with open(baseline_file) as f:
      for line in f.readlines():
        name, best = line.split(",")
        for benchmark in BENCHMARKS:
          if benchmark[0] == name:
            benchmark[2] = float(best)


def generate_baseline():
  print("generating baseline")
  baseline_text = ""
  for benchmark in BENCHMARKS:
    best = run_benchmark_language(benchmark, LANGUAGES[0], {})
    baseline_text += ("{},{}\n".format(benchmark[0], best))

  # Write them to a file.
  baseline_file = os.path.join(BENCHMARK_DIR, "baseline.txt")
  with open(baseline_file, 'w') as out:
    out.write(baseline_text)


def print_html():
  '''Print the results as an HTML chart.'''

  def print_benchmark(benchmark, name):
    print('<h3>{}</h3>'.format(name))
    print('<table class="chart">')

    # Scale everything by the highest time.
    highest = 0
    for language, result in results[benchmark].items():
      time = min(result["times"])
      if time > highest: highest = time

    languages = sorted(results[benchmark].keys(),
        key=lambda lang: results[benchmark][lang]["score"], reverse=True)

    for language in languages:
      result = results[benchmark][language]
      time = float(min(result["times"]))
      ratio = int(100 * time / highest)
      css_class = "chart-bar"
      if language == "sat":
        css_class += " sat"
      print('  <tr>')
      print('    <th>{}</th><td><div class="{}" style="width: {}%;">{:4.2f}s&nbsp;</div></td>'.format(
          language, css_class, ratio, time))
      print('  </tr>')
    print('</table>')

  print_benchmark("method_call", "Method Call")
  print_benchmark("delta_blue", "DeltaBlue")
  print_benchmark("binary_trees", "Binary Trees")
  print_benchmark("fib", "Recursive Fibonacci")


def main():
  parser = argparse.ArgumentParser(description="Run the benchmarks")
  parser.add_argument("benchmark", nargs='?',
      default="all",
      help="The benchmark to run")
  parser.add_argument("--generate-baseline",
      action="store_true",
      help="Generate a baseline file")
  parser.add_argument("--graph",
      action="store_true",
      help="Display graph results.")
  parser.add_argument("-l", "--language",
      action="append",
      help="Which language(s) to run benchmarks for")
  parser.add_argument("--output-html",
      action="store_true",
      help="Output the results chart as HTML")

  args = parser.parse_args()

  if args.generate_baseline:
    generate_baseline()
    return

  read_baseline()

  # Run the benchmarks.
  for benchmark in BENCHMARKS:
    if benchmark[0] == args.benchmark or args.benchmark == "all":
      run_benchmark(benchmark, args.language, args.graph)

  if args.output_html:
    print_html()

if __name__ == "__main__":
    BENCHMARK("bench_0", 20, 17)
    BENCHMARK("bench_100", 20, 1)
    BENCHMARK("bench_101", 20, 7)
    BENCHMARK("bench_102", 20, 8)
    BENCHMARK("bench_103", 20, 3)
    BENCHMARK("bench_104", 20, 2)
    BENCHMARK("bench_105", 20, 13)
    BENCHMARK("bench_106", 20, 7)
    BENCHMARK("bench_107", 20, 3)
    BENCHMARK("bench_108", 20, 10)
    BENCHMARK("bench_109", 20, 1)
    BENCHMARK("bench_10", 20, 9)
    BENCHMARK("bench_110", 20, 9)
    BENCHMARK("bench_111", 20, 23)
    BENCHMARK("bench_112", 20, 14)
    BENCHMARK("bench_113", 20, 7)
    BENCHMARK("bench_114", 20, 2)
    BENCHMARK("bench_115", 20, 33)
    BENCHMARK("bench_116", 20, 2)
    BENCHMARK("bench_117", 20, 2)
    BENCHMARK("bench_118", 20, 2)
    BENCHMARK("bench_119", 20, 15)
    BENCHMARK("bench_11", 20, 1)
    BENCHMARK("bench_120", 20, 4)
    BENCHMARK("bench_121", 20, 1)
    BENCHMARK("bench_122", 20, 3)
    BENCHMARK("bench_123", 20, 9)
    BENCHMARK("bench_124", 20, 29)
    BENCHMARK("bench_125", 20, 7)
    BENCHMARK("bench_126", 20, 6)
    BENCHMARK("bench_127", 20, 6)
    BENCHMARK("bench_128", 20, 5)
    BENCHMARK("bench_129", 20, 2)
    BENCHMARK("bench_12", 20, 1)
    BENCHMARK("bench_130", 20, 11)
    BENCHMARK("bench_131", 20, 12)
    BENCHMARK("bench_132", 20, 9)
    BENCHMARK("bench_133", 20, 2)
    BENCHMARK("bench_134", 20, 37)
    BENCHMARK("bench_135", 20, 2)
    BENCHMARK("bench_136", 20, 5)
    BENCHMARK("bench_137", 20, 10)
    BENCHMARK("bench_138", 20, 26)
    BENCHMARK("bench_139", 20, 5)
    BENCHMARK("bench_13", 20, 5)
    BENCHMARK("bench_140", 20, 1)
    BENCHMARK("bench_141", 20, 27)
    BENCHMARK("bench_142", 20, 4)
    BENCHMARK("bench_143", 20, 14)
    BENCHMARK("bench_144", 20, 34)
    BENCHMARK("bench_145", 20, 1)
    BENCHMARK("bench_146", 20, 4)
    BENCHMARK("bench_147", 20, 7)
    BENCHMARK("bench_148", 20, 8)
    BENCHMARK("bench_149", 20, 3)
    BENCHMARK("bench_14", 20, 2)
    BENCHMARK("bench_150", 20, 3)
    BENCHMARK("bench_151", 20, 2)
    BENCHMARK("bench_152", 20, 3)
    BENCHMARK("bench_153", 20, 34)
    BENCHMARK("bench_154", 20, 5)
    BENCHMARK("bench_155", 20, 29)
    BENCHMARK("bench_156", 20, 8)
    BENCHMARK("bench_157", 20, 20)
    BENCHMARK("bench_158", 20, 1)
    BENCHMARK("bench_159", 20, 12)
    BENCHMARK("bench_15", 20, 40)
    BENCHMARK("bench_160", 20, 10)
    BENCHMARK("bench_161", 20, 12)
    BENCHMARK("bench_162", 20, 9)
    BENCHMARK("bench_163", 20, 2)
    BENCHMARK("bench_164", 20, 19)
    BENCHMARK("bench_165", 20, 6)
    BENCHMARK("bench_166", 20, 7)
    BENCHMARK("bench_167", 20, 2)
    BENCHMARK("bench_168", 20, 6)
    BENCHMARK("bench_169", 20, 13)
    BENCHMARK("bench_16", 20, 87)
    BENCHMARK("bench_170", 20, 33)
    BENCHMARK("bench_171", 20, 4)
    BENCHMARK("bench_172", 20, 2)
    BENCHMARK("bench_173", 20, 76)
    BENCHMARK("bench_174", 20, 1)
    BENCHMARK("bench_175", 20, 1)
    BENCHMARK("bench_176", 20, 10)
    BENCHMARK("bench_177", 20, 1)
    BENCHMARK("bench_178", 20, 21)
    BENCHMARK("bench_179", 20, 3)
    BENCHMARK("bench_17", 20, 14)
    BENCHMARK("bench_180", 20, 18)
    BENCHMARK("bench_181", 20, 3)
    BENCHMARK("bench_182", 20, 11)
    BENCHMARK("bench_183", 20, 8)
    BENCHMARK("bench_184", 20, 46)
    BENCHMARK("bench_185", 20, 16)
    BENCHMARK("bench_186", 20, 11)
    BENCHMARK("bench_187", 20, 14)
    BENCHMARK("bench_188", 20, 1)
    BENCHMARK("bench_189", 20, 5)
    BENCHMARK("bench_18", 20, 7)
    BENCHMARK("bench_190", 20, 2)
    BENCHMARK("bench_191", 20, 3)
    BENCHMARK("bench_192", 20, 4)
    BENCHMARK("bench_193", 20, 11)
    BENCHMARK("bench_194", 20, 3)
    BENCHMARK("bench_195", 20, 6)
    BENCHMARK("bench_196", 20, 40)
    BENCHMARK("bench_197", 20, 20)
    BENCHMARK("bench_198", 20, 9)
    BENCHMARK("bench_199", 20, 1)
    BENCHMARK("bench_19", 20, 13)
    BENCHMARK("bench_1", 20, 16)
    BENCHMARK("bench_200", 20, 32)
    BENCHMARK("bench_201", 20, 13)
    BENCHMARK("bench_202", 20, 18)
    BENCHMARK("bench_203", 20, 5)
    BENCHMARK("bench_204", 20, 178)
    BENCHMARK("bench_205", 20, 13)
    BENCHMARK("bench_206", 20, 2)
    BENCHMARK("bench_207", 20, 8)
    BENCHMARK("bench_208", 20, 6)
    BENCHMARK("bench_209", 20, 4)
    BENCHMARK("bench_20", 20, 9)
    BENCHMARK("bench_210", 20, 47)
    BENCHMARK("bench_211", 20, 6)
    BENCHMARK("bench_212", 20, 22)
    BENCHMARK("bench_213", 20, 9)
    BENCHMARK("bench_214", 20, 4)
    BENCHMARK("bench_215", 20, 2)
    BENCHMARK("bench_216", 20, 2)
    BENCHMARK("bench_217", 20, 6)
    BENCHMARK("bench_218", 20, 3)
    BENCHMARK("bench_219", 20, 1)
    BENCHMARK("bench_21", 20, 3)
    BENCHMARK("bench_220", 20, 1)
    BENCHMARK("bench_221", 20, 11)
    BENCHMARK("bench_222", 20, 25)
    BENCHMARK("bench_223", 20, 4)
    BENCHMARK("bench_224", 20, 2)
    BENCHMARK("bench_225", 20, 15)
    BENCHMARK("bench_226", 20, 5)
    BENCHMARK("bench_227", 20, 6)
    BENCHMARK("bench_228", 20, 7)
    BENCHMARK("bench_229", 20, 1)
    BENCHMARK("bench_22", 20, 2)
    BENCHMARK("bench_230", 20, 30)
    BENCHMARK("bench_231", 20, 8)
    BENCHMARK("bench_232", 20, 1)
    BENCHMARK("bench_233", 20, 8)
    BENCHMARK("bench_234", 20, 3)
    BENCHMARK("bench_235", 20, 12)
    BENCHMARK("bench_236", 20, 19)
    BENCHMARK("bench_237", 20, 17)
    BENCHMARK("bench_238", 20, 32)
    BENCHMARK("bench_239", 20, 64)
    BENCHMARK("bench_23", 20, 40)
    BENCHMARK("bench_240", 20, 1)
    BENCHMARK("bench_241", 20, 3)
    BENCHMARK("bench_242", 20, 5)
    BENCHMARK("bench_243", 20, 1)
    BENCHMARK("bench_244", 20, 4)
    BENCHMARK("bench_245", 20, 15)
    BENCHMARK("bench_246", 20, 11)
    BENCHMARK("bench_247", 20, 9)
    BENCHMARK("bench_248", 20, 6)
    BENCHMARK("bench_249", 20, 6)
    BENCHMARK("bench_24", 20, 3)
    BENCHMARK("bench_250", 20, 5)
    BENCHMARK("bench_251", 20, 1)
    BENCHMARK("bench_252", 20, 10)
    BENCHMARK("bench_253", 20, 4)
    BENCHMARK("bench_254", 20, 1)
    BENCHMARK("bench_255", 20, 6)
    BENCHMARK("bench_256", 20, 10)
    BENCHMARK("bench_257", 20, 4)
    BENCHMARK("bench_258", 20, 23)
    BENCHMARK("bench_259", 20, 1)
    BENCHMARK("bench_25", 20, 83)
    BENCHMARK("bench_260", 20, 3)
    BENCHMARK("bench_261", 20, 11)
    BENCHMARK("bench_262", 20, 2)
    BENCHMARK("bench_263", 20, 9)
    BENCHMARK("bench_264", 20, 4)
    BENCHMARK("bench_265", 20, 1)
    BENCHMARK("bench_266", 20, 11)
    BENCHMARK("bench_267", 20, 8)
    BENCHMARK("bench_268", 20, 1)
    BENCHMARK("bench_269", 20, 8)
    BENCHMARK("bench_26", 20, 17)
    BENCHMARK("bench_270", 20, 3)
    BENCHMARK("bench_271", 20, 12)
    BENCHMARK("bench_272", 20, 30)
    BENCHMARK("bench_273", 20, 72)
    BENCHMARK("bench_274", 20, 4)
    BENCHMARK("bench_275", 20, 6)
    BENCHMARK("bench_276", 20, 3)
    BENCHMARK("bench_277", 20, 2)
    BENCHMARK("bench_278", 20, 6)
    BENCHMARK("bench_279", 20, 10)
    BENCHMARK("bench_27", 20, 8)
    BENCHMARK("bench_280", 20, 2)
    BENCHMARK("bench_281", 20, 8)
    BENCHMARK("bench_282", 20, 5)
    BENCHMARK("bench_283", 20, 5)
    BENCHMARK("bench_284", 20, 12)
    BENCHMARK("bench_285", 20, 6)
    BENCHMARK("bench_286", 20, 17)
    BENCHMARK("bench_287", 20, 3)
    BENCHMARK("bench_288", 20, 4)
    BENCHMARK("bench_289", 20, 3)
    BENCHMARK("bench_28", 20, 3)
    BENCHMARK("bench_290", 20, 18)
    BENCHMARK("bench_291", 20, 23)
    BENCHMARK("bench_292", 20, 16)
    BENCHMARK("bench_293", 20, 50)
    BENCHMARK("bench_294", 20, 14)
    BENCHMARK("bench_295", 20, 14)
    BENCHMARK("bench_296", 20, 9)
    BENCHMARK("bench_297", 20, 4)
    BENCHMARK("bench_298", 20, 32)
    BENCHMARK("bench_299", 20, 6)
    BENCHMARK("bench_29", 20, 2)
    BENCHMARK("bench_2", 20, 8)
    BENCHMARK("bench_300", 20, 4)
    BENCHMARK("bench_301", 20, 3)
    BENCHMARK("bench_302", 20, 3)
    BENCHMARK("bench_303", 20, 1)
    BENCHMARK("bench_304", 20, 12)
    BENCHMARK("bench_305", 20, 6)
    BENCHMARK("bench_306", 20, 15)
    BENCHMARK("bench_307", 20, 2)
    BENCHMARK("bench_308", 20, 55)
    BENCHMARK("bench_309", 20, 3)
    BENCHMARK("bench_30", 20, 58)
    BENCHMARK("bench_310", 20, 11)
    BENCHMARK("bench_311", 20, 4)
    BENCHMARK("bench_312", 20, 2)
    BENCHMARK("bench_313", 20, 55)
    BENCHMARK("bench_314", 20, 16)
    BENCHMARK("bench_315", 20, 6)
    BENCHMARK("bench_316", 20, 19)
    BENCHMARK("bench_317", 20, 3)
    BENCHMARK("bench_318", 20, 7)
    BENCHMARK("bench_319", 20, 10)
    BENCHMARK("bench_31", 20, 20)
    BENCHMARK("bench_320", 20, 2)
    BENCHMARK("bench_321", 20, 47)
    BENCHMARK("bench_322", 20, 5)
    BENCHMARK("bench_323", 20, 6)
    BENCHMARK("bench_324", 20, 5)
    BENCHMARK("bench_325", 20, 19)
    BENCHMARK("bench_326", 20, 6)
    BENCHMARK("bench_327", 20, 8)
    BENCHMARK("bench_328", 20, 5)
    BENCHMARK("bench_329", 20, 110)
    BENCHMARK("bench_32", 20, 8)
    BENCHMARK("bench_330", 20, 3)
    BENCHMARK("bench_331", 20, 10)
    BENCHMARK("bench_332", 20, 3)
    BENCHMARK("bench_333", 20, 5)
    BENCHMARK("bench_334", 20, 3)
    BENCHMARK("bench_335", 20, 3)
    BENCHMARK("bench_336", 20, 3)
    BENCHMARK("bench_337", 20, 140)
    BENCHMARK("bench_338", 20, 1)
    BENCHMARK("bench_339", 20, 35)
    BENCHMARK("bench_33", 20, 24)
    BENCHMARK("bench_340", 20, 25)
    BENCHMARK("bench_341", 20, 4)
    BENCHMARK("bench_342", 20, 4)
    BENCHMARK("bench_343", 20, 6)
    BENCHMARK("bench_344", 20, 6)
    BENCHMARK("bench_345", 20, 1)
    BENCHMARK("bench_346", 20, 7)
    BENCHMARK("bench_347", 20, 2)
    BENCHMARK("bench_348", 20, 26)
    BENCHMARK("bench_349", 20, 7)
    BENCHMARK("bench_34", 20, 6)
    BENCHMARK("bench_350", 20, 2)
    BENCHMARK("bench_351", 20, 5)
    BENCHMARK("bench_352", 20, 26)
    BENCHMARK("bench_353", 20, 51)
    BENCHMARK("bench_354", 20, 9)
    BENCHMARK("bench_355", 20, 1)
    BENCHMARK("bench_356", 20, 4)
    BENCHMARK("bench_357", 20, 2)
    BENCHMARK("bench_358", 20, 5)
    BENCHMARK("bench_359", 20, 4)
    BENCHMARK("bench_35", 20, 7)
    BENCHMARK("bench_360", 20, 3)
    BENCHMARK("bench_361", 20, 2)
    BENCHMARK("bench_362", 20, 9)
    BENCHMARK("bench_363", 20, 20)
    BENCHMARK("bench_364", 20, 4)
    BENCHMARK("bench_365", 20, 26)
    BENCHMARK("bench_366", 20, 2)
    BENCHMARK("bench_367", 20, 14)
    BENCHMARK("bench_368", 20, 24)
    BENCHMARK("bench_369", 20, 3)
    BENCHMARK("bench_36", 20, 10)
    BENCHMARK("bench_370", 20, 17)
    BENCHMARK("bench_371", 20, 9)
    BENCHMARK("bench_372", 20, 2)
    BENCHMARK("bench_373", 20, 36)
    BENCHMARK("bench_374", 20, 2)
    BENCHMARK("bench_375", 20, 17)
    BENCHMARK("bench_376", 20, 8)
    BENCHMARK("bench_377", 20, 5)
    BENCHMARK("bench_378", 20, 121)
    BENCHMARK("bench_379", 20, 3)
    BENCHMARK("bench_37", 20, 141)
    BENCHMARK("bench_380", 20, 9)
    BENCHMARK("bench_381", 20, 4)
    BENCHMARK("bench_382", 20, 33)
    BENCHMARK("bench_383", 20, 86)
    BENCHMARK("bench_384", 20, 2)
    BENCHMARK("bench_385", 20, 8)
    BENCHMARK("bench_386", 20, 1)
    BENCHMARK("bench_387", 20, 6)
    BENCHMARK("bench_388", 20, 18)
    BENCHMARK("bench_389", 20, 57)
    BENCHMARK("bench_38", 20, 1)
    BENCHMARK("bench_390", 20, 4)
    BENCHMARK("bench_391", 20, 5)
    BENCHMARK("bench_392", 20, 5)
    BENCHMARK("bench_393", 20, 5)
    BENCHMARK("bench_394", 20, 5)
    BENCHMARK("bench_395", 20, 1)
    BENCHMARK("bench_396", 20, 11)
    BENCHMARK("bench_397", 20, 15)
    BENCHMARK("bench_398", 20, 7)
    BENCHMARK("bench_399", 20, 1)
    BENCHMARK("bench_39", 20, 20)
    BENCHMARK("bench_3", 20, 9)
    BENCHMARK("bench_400", 20, 2)
    BENCHMARK("bench_401", 20, 4)
    BENCHMARK("bench_402", 20, 1)
    BENCHMARK("bench_403", 20, 1)
    BENCHMARK("bench_404", 20, 2)
    BENCHMARK("bench_405", 20, 10)
    BENCHMARK("bench_406", 20, 4)
    BENCHMARK("bench_407", 20, 5)
    BENCHMARK("bench_408", 20, 8)
    BENCHMARK("bench_409", 20, 24)
    BENCHMARK("bench_40", 20, 19)
    BENCHMARK("bench_410", 20, 4)
    BENCHMARK("bench_411", 20, 29)
    BENCHMARK("bench_412", 20, 6)
    BENCHMARK("bench_413", 20, 2)
    BENCHMARK("bench_414", 20, 2)
    BENCHMARK("bench_415", 20, 1)
    BENCHMARK("bench_416", 20, 8)
    BENCHMARK("bench_417", 20, 4)
    BENCHMARK("bench_418", 20, 1)
    BENCHMARK("bench_419", 20, 15)
    BENCHMARK("bench_41", 20, 2)
    BENCHMARK("bench_420", 20, 3)
    BENCHMARK("bench_421", 20, 16)
    BENCHMARK("bench_422", 20, 51)
    BENCHMARK("bench_423", 20, 3)
    BENCHMARK("bench_424", 20, 41)
    BENCHMARK("bench_425", 20, 19)
    BENCHMARK("bench_426", 20, 7)
    BENCHMARK("bench_427", 20, 3)
    BENCHMARK("bench_428", 20, 2)
    BENCHMARK("bench_429", 20, 1)
    BENCHMARK("bench_42", 20, 6)
    BENCHMARK("bench_430", 20, 5)
    BENCHMARK("bench_431", 20, 16)
    BENCHMARK("bench_432", 20, 1)
    BENCHMARK("bench_433", 20, 34)
    BENCHMARK("bench_434", 20, 12)
    BENCHMARK("bench_435", 20, 9)
    BENCHMARK("bench_436", 20, 38)
    BENCHMARK("bench_437", 20, 2)
    BENCHMARK("bench_438", 20, 12)
    BENCHMARK("bench_439", 20, 2)
    BENCHMARK("bench_43", 20, 61)
    BENCHMARK("bench_440", 20, 1)
    BENCHMARK("bench_441", 20, 3)
    BENCHMARK("bench_442", 20, 27)
    BENCHMARK("bench_443", 20, 13)
    BENCHMARK("bench_444", 20, 1)
    BENCHMARK("bench_445", 20, 3)
    BENCHMARK("bench_446", 20, 9)
    BENCHMARK("bench_447", 20, 39)
    BENCHMARK("bench_448", 20, 6)
    BENCHMARK("bench_449", 20, 3)
    BENCHMARK("bench_44", 20, 4)
    BENCHMARK("bench_450", 20, 4)
    BENCHMARK("bench_451", 20, 14)
    BENCHMARK("bench_452", 20, 6)
    BENCHMARK("bench_453", 20, 9)
    BENCHMARK("bench_454", 20, 8)
    BENCHMARK("bench_455", 20, 1)
    BENCHMARK("bench_456", 20, 10)
    BENCHMARK("bench_457", 20, 27)
    BENCHMARK("bench_458", 20, 1)
    BENCHMARK("bench_459", 20, 1)
    BENCHMARK("bench_45", 20, 25)
    BENCHMARK("bench_460", 20, 8)
    BENCHMARK("bench_461", 20, 4)
    BENCHMARK("bench_462", 20, 3)
    BENCHMARK("bench_463", 20, 40)
    BENCHMARK("bench_464", 20, 3)
    BENCHMARK("bench_465", 20, 3)
    BENCHMARK("bench_466", 20, 24)
    BENCHMARK("bench_467", 20, 2)
    BENCHMARK("bench_468", 20, 5)
    BENCHMARK("bench_469", 20, 1)
    BENCHMARK("bench_46", 20, 9)
    BENCHMARK("bench_470", 20, 9)
    BENCHMARK("bench_471", 20, 4)
    BENCHMARK("bench_472", 20, 5)
    BENCHMARK("bench_473", 20, 17)
    BENCHMARK("bench_474", 20, 2)
    BENCHMARK("bench_475", 20, 3)
    BENCHMARK("bench_476", 20, 4)
    BENCHMARK("bench_477", 20, 1)
    BENCHMARK("bench_478", 20, 14)
    BENCHMARK("bench_479", 20, 10)
    BENCHMARK("bench_47", 20, 5)
    BENCHMARK("bench_480", 20, 12)
    BENCHMARK("bench_481", 20, 28)
    BENCHMARK("bench_482", 20, 8)
    BENCHMARK("bench_483", 20, 7)
    BENCHMARK("bench_484", 20, 2)
    BENCHMARK("bench_485", 20, 4)
    BENCHMARK("bench_486", 20, 21)
    BENCHMARK("bench_487", 20, 2)
    BENCHMARK("bench_488", 20, 12)
    BENCHMARK("bench_489", 20, 2)
    BENCHMARK("bench_48", 20, 1)
    BENCHMARK("bench_490", 20, 8)
    BENCHMARK("bench_491", 20, 18)
    BENCHMARK("bench_492", 20, 17)
    BENCHMARK("bench_493", 20, 2)
    BENCHMARK("bench_494", 20, 2)
    BENCHMARK("bench_495", 20, 2)
    BENCHMARK("bench_496", 20, 50)
    BENCHMARK("bench_497", 20, 18)
    BENCHMARK("bench_498", 20, 3)
    BENCHMARK("bench_499", 20, 10)
    BENCHMARK("bench_49", 20, 16)
    BENCHMARK("bench_4", 20, 4)
    BENCHMARK("bench_500", 20, 8)
    BENCHMARK("bench_501", 20, 8)
    BENCHMARK("bench_502", 20, 13)
    BENCHMARK("bench_503", 20, 3)
    BENCHMARK("bench_504", 20, 7)
    BENCHMARK("bench_505", 20, 3)
    BENCHMARK("bench_506", 20, 17)
    BENCHMARK("bench_507", 20, 3)
    BENCHMARK("bench_508", 20, 10)
    BENCHMARK("bench_509", 20, 16)
    BENCHMARK("bench_50", 20, 45)
    BENCHMARK("bench_510", 20, 50)
    BENCHMARK("bench_511", 20, 7)
    BENCHMARK("bench_512", 20, 17)
    BENCHMARK("bench_513", 20, 16)
    BENCHMARK("bench_514", 20, 5)
    BENCHMARK("bench_515", 20, 3)
    BENCHMARK("bench_516", 20, 8)
    BENCHMARK("bench_517", 20, 2)
    BENCHMARK("bench_518", 20, 8)
    BENCHMARK("bench_519", 20, 1)
    BENCHMARK("bench_51", 20, 44)
    BENCHMARK("bench_520", 20, 15)
    BENCHMARK("bench_521", 20, 3)
    BENCHMARK("bench_522", 20, 4)
    BENCHMARK("bench_523", 20, 28)
    BENCHMARK("bench_524", 20, 10)
    BENCHMARK("bench_525", 20, 3)
    BENCHMARK("bench_526", 20, 1)
    BENCHMARK("bench_527", 20, 4)
    BENCHMARK("bench_528", 20, 12)
    BENCHMARK("bench_529", 20, 1)
    BENCHMARK("bench_52", 20, 12)
    BENCHMARK("bench_530", 20, 6)
    BENCHMARK("bench_531", 20, 67)
    BENCHMARK("bench_532", 20, 5)
    BENCHMARK("bench_533", 20, 1)
    BENCHMARK("bench_534", 20, 8)
    BENCHMARK("bench_535", 20, 2)
    BENCHMARK("bench_536", 20, 8)
    BENCHMARK("bench_537", 20, 5)
    BENCHMARK("bench_538", 20, 1)
    BENCHMARK("bench_539", 20, 13)
    BENCHMARK("bench_53", 20, 2)
    BENCHMARK("bench_540", 20, 2)
    BENCHMARK("bench_541", 20, 2)
    BENCHMARK("bench_542", 20, 4)
    BENCHMARK("bench_543", 20, 5)
    BENCHMARK("bench_544", 20, 4)
    BENCHMARK("bench_545", 20, 1)
    BENCHMARK("bench_546", 20, 3)
    BENCHMARK("bench_547", 20, 30)
    BENCHMARK("bench_548", 20, 7)
    BENCHMARK("bench_549", 20, 105)
    BENCHMARK("bench_54", 20, 3)
    BENCHMARK("bench_550", 20, 8)
    BENCHMARK("bench_551", 20, 3)
    BENCHMARK("bench_552", 20, 1)
    BENCHMARK("bench_553", 20, 3)
    BENCHMARK("bench_554", 20, 3)
    BENCHMARK("bench_555", 20, 1)
    BENCHMARK("bench_556", 20, 5)
    BENCHMARK("bench_557", 20, 3)
    BENCHMARK("bench_558", 20, 2)
    BENCHMARK("bench_559", 20, 3)
    BENCHMARK("bench_55", 20, 16)
    BENCHMARK("bench_560", 20, 3)
    BENCHMARK("bench_561", 20, 6)
    BENCHMARK("bench_562", 20, 12)
    BENCHMARK("bench_563", 20, 2)
    BENCHMARK("bench_564", 20, 98)
    BENCHMARK("bench_565", 20, 19)
    BENCHMARK("bench_566", 20, 44)
    BENCHMARK("bench_567", 20, 5)
    BENCHMARK("bench_568", 20, 39)
    BENCHMARK("bench_569", 20, 3)
    BENCHMARK("bench_56", 20, 17)
    BENCHMARK("bench_570", 20, 6)
    BENCHMARK("bench_571", 20, 1)
    BENCHMARK("bench_572", 20, 6)
    BENCHMARK("bench_573", 20, 20)
    BENCHMARK("bench_574", 20, 4)
    BENCHMARK("bench_575", 20, 11)
    BENCHMARK("bench_576", 20, 9)
    BENCHMARK("bench_577", 20, 1)
    BENCHMARK("bench_578", 20, 3)
    BENCHMARK("bench_579", 20, 13)
    BENCHMARK("bench_57", 20, 10)
    BENCHMARK("bench_580", 20, 43)
    BENCHMARK("bench_581", 20, 3)
    BENCHMARK("bench_582", 20, 7)
    BENCHMARK("bench_583", 20, 9)
    BENCHMARK("bench_584", 20, 13)
    BENCHMARK("bench_585", 20, 6)
    BENCHMARK("bench_586", 20, 4)
    BENCHMARK("bench_587", 20, 13)
    BENCHMARK("bench_588", 20, 4)
    BENCHMARK("bench_589", 20, 44)
    BENCHMARK("bench_58", 20, 6)
    BENCHMARK("bench_590", 20, 11)
    BENCHMARK("bench_591", 20, 14)
    BENCHMARK("bench_592", 20, 9)
    BENCHMARK("bench_593", 20, 3)
    BENCHMARK("bench_594", 20, 2)
    BENCHMARK("bench_595", 20, 9)
    BENCHMARK("bench_596", 20, 4)
    BENCHMARK("bench_597", 20, 46)
    BENCHMARK("bench_598", 20, 12)
    BENCHMARK("bench_599", 20, 2)
    BENCHMARK("bench_59", 20, 26)
    BENCHMARK("bench_5", 20, 1)
    BENCHMARK("bench_600", 20, 27)
    BENCHMARK("bench_601", 20, 13)
    BENCHMARK("bench_602", 20, 24)
    BENCHMARK("bench_603", 20, 2)
    BENCHMARK("bench_604", 20, 16)
    BENCHMARK("bench_605", 20, 7)
    BENCHMARK("bench_606", 20, 35)
    BENCHMARK("bench_607", 20, 8)
    BENCHMARK("bench_608", 20, 2)
    BENCHMARK("bench_609", 20, 7)
    BENCHMARK("bench_60", 20, 67)
    BENCHMARK("bench_610", 20, 52)
    BENCHMARK("bench_611", 20, 7)
    BENCHMARK("bench_612", 20, 2)
    BENCHMARK("bench_613", 20, 3)
    BENCHMARK("bench_614", 20, 28)
    BENCHMARK("bench_615", 20, 8)
    BENCHMARK("bench_616", 20, 3)
    BENCHMARK("bench_617", 20, 6)
    BENCHMARK("bench_618", 20, 20)
    BENCHMARK("bench_619", 20, 19)
    BENCHMARK("bench_61", 20, 1)
    BENCHMARK("bench_620", 20, 38)
    BENCHMARK("bench_621", 20, 1)
    BENCHMARK("bench_622", 20, 48)
    BENCHMARK("bench_623", 20, 4)
    BENCHMARK("bench_624", 20, 6)
    BENCHMARK("bench_625", 20, 2)
    BENCHMARK("bench_626", 20, 6)
    BENCHMARK("bench_627", 20, 4)
    BENCHMARK("bench_628", 20, 6)
    BENCHMARK("bench_629", 20, 3)
    BENCHMARK("bench_62", 20, 34)
    BENCHMARK("bench_630", 20, 6)
    BENCHMARK("bench_631", 20, 5)
    BENCHMARK("bench_632", 20, 2)
    BENCHMARK("bench_633", 20, 42)
    BENCHMARK("bench_634", 20, 2)
    BENCHMARK("bench_635", 20, 19)
    BENCHMARK("bench_636", 20, 3)
    BENCHMARK("bench_637", 20, 30)
    BENCHMARK("bench_638", 20, 1)
    BENCHMARK("bench_639", 20, 2)
    BENCHMARK("bench_63", 20, 11)
    BENCHMARK("bench_640", 20, 36)
    BENCHMARK("bench_641", 20, 7)
    BENCHMARK("bench_642", 20, 1)
    BENCHMARK("bench_643", 20, 7)
    BENCHMARK("bench_644", 20, 10)
    BENCHMARK("bench_645", 20, 2)
    BENCHMARK("bench_646", 20, 14)
    BENCHMARK("bench_647", 20, 1)
    BENCHMARK("bench_648", 20, 1)
    BENCHMARK("bench_649", 20, 10)
    BENCHMARK("bench_64", 20, 8)
    BENCHMARK("bench_650", 20, 7)
    BENCHMARK("bench_651", 20, 2)
    BENCHMARK("bench_652", 20, 4)
    BENCHMARK("bench_653", 20, 39)
    BENCHMARK("bench_654", 20, 2)
    BENCHMARK("bench_655", 20, 34)
    BENCHMARK("bench_656", 20, 1)
    BENCHMARK("bench_657", 20, 4)
    BENCHMARK("bench_658", 20, 2)
    BENCHMARK("bench_659", 20, 2)
    BENCHMARK("bench_65", 20, 14)
    BENCHMARK("bench_660", 20, 3)
    BENCHMARK("bench_661", 20, 18)
    BENCHMARK("bench_662", 20, 24)
    BENCHMARK("bench_663", 20, 4)
    BENCHMARK("bench_664", 20, 23)
    BENCHMARK("bench_665", 20, 35)
    BENCHMARK("bench_666", 20, 1)
    BENCHMARK("bench_667", 20, 1)
    BENCHMARK("bench_668", 20, 47)
    BENCHMARK("bench_669", 20, 40)
    BENCHMARK("bench_66", 20, 7)
    BENCHMARK("bench_670", 20, 6)
    BENCHMARK("bench_671", 20, 2)
    BENCHMARK("bench_672", 20, 58)
    BENCHMARK("bench_673", 20, 8)
    BENCHMARK("bench_674", 20, 1)
    BENCHMARK("bench_675", 20, 5)
    BENCHMARK("bench_676", 20, 9)
    BENCHMARK("bench_677", 20, 18)
    BENCHMARK("bench_678", 20, 4)
    BENCHMARK("bench_679", 20, 2)
    BENCHMARK("bench_67", 20, 16)
    BENCHMARK("bench_680", 20, 20)
    BENCHMARK("bench_681", 20, 1)
    BENCHMARK("bench_682", 20, 2)
    BENCHMARK("bench_683", 20, 2)
    BENCHMARK("bench_684", 20, 6)
    BENCHMARK("bench_685", 20, 5)
    BENCHMARK("bench_686", 20, 6)
    BENCHMARK("bench_687", 20, 7)
    BENCHMARK("bench_688", 20, 15)
    BENCHMARK("bench_689", 20, 19)
    BENCHMARK("bench_68", 20, 2)
    BENCHMARK("bench_690", 20, 4)
    BENCHMARK("bench_691", 20, 71)
    BENCHMARK("bench_692", 20, 1)
    BENCHMARK("bench_693", 20, 8)
    BENCHMARK("bench_694", 20, 21)
    BENCHMARK("bench_695", 20, 4)
    BENCHMARK("bench_696", 20, 1)
    BENCHMARK("bench_697", 20, 31)
    BENCHMARK("bench_698", 20, 4)
    BENCHMARK("bench_699", 20, 13)
    BENCHMARK("bench_69", 20, 10)
    BENCHMARK("bench_6", 20, 6)
    BENCHMARK("bench_700", 20, 1)
    BENCHMARK("bench_701", 20, 39)
    BENCHMARK("bench_702", 20, 1)
    BENCHMARK("bench_703", 20, 2)
    BENCHMARK("bench_704", 20, 4)
    BENCHMARK("bench_705", 20, 8)
    BENCHMARK("bench_706", 20, 3)
    BENCHMARK("bench_707", 20, 2)
    BENCHMARK("bench_708", 20, 2)
    BENCHMARK("bench_709", 20, 13)
    BENCHMARK("bench_70", 20, 2)
    BENCHMARK("bench_710", 20, 29)
    BENCHMARK("bench_711", 20, 4)
    BENCHMARK("bench_712", 20, 5)
    BENCHMARK("bench_713", 20, 10)
    BENCHMARK("bench_714", 20, 8)
    BENCHMARK("bench_715", 20, 48)
    BENCHMARK("bench_716", 20, 5)
    BENCHMARK("bench_717", 20, 8)
    BENCHMARK("bench_718", 20, 2)
    BENCHMARK("bench_719", 20, 5)
    BENCHMARK("bench_71", 20, 4)
    BENCHMARK("bench_720", 20, 16)
    BENCHMARK("bench_721", 20, 5)
    BENCHMARK("bench_722", 20, 13)
    BENCHMARK("bench_723", 20, 3)
    BENCHMARK("bench_724", 20, 12)
    BENCHMARK("bench_725", 20, 5)
    BENCHMARK("bench_726", 20, 25)
    BENCHMARK("bench_727", 20, 1)
    BENCHMARK("bench_728", 20, 1)
    BENCHMARK("bench_729", 20, 16)
    BENCHMARK("bench_72", 20, 7)
    BENCHMARK("bench_730", 20, 14)
    BENCHMARK("bench_731", 20, 1)
    BENCHMARK("bench_732", 20, 1)
    BENCHMARK("bench_733", 20, 2)
    BENCHMARK("bench_734", 20, 10)
    BENCHMARK("bench_735", 20, 49)
    BENCHMARK("bench_736", 20, 23)
    BENCHMARK("bench_737", 20, 3)
    BENCHMARK("bench_738", 20, 9)
    BENCHMARK("bench_739", 20, 6)
    BENCHMARK("bench_73", 20, 44)
    BENCHMARK("bench_740", 20, 2)
    BENCHMARK("bench_741", 20, 51)
    BENCHMARK("bench_742", 20, 13)
    BENCHMARK("bench_743", 20, 11)
    BENCHMARK("bench_744", 20, 1)
    BENCHMARK("bench_745", 20, 22)
    BENCHMARK("bench_746", 20, 2)
    BENCHMARK("bench_747", 20, 5)
    BENCHMARK("bench_748", 20, 24)
    BENCHMARK("bench_749", 20, 8)
    BENCHMARK("bench_74", 20, 14)
    BENCHMARK("bench_750", 20, 2)
    BENCHMARK("bench_751", 20, 1)
    BENCHMARK("bench_752", 20, 7)
    BENCHMARK("bench_753", 20, 9)
    BENCHMARK("bench_754", 20, 16)
    BENCHMARK("bench_755", 20, 36)
    BENCHMARK("bench_756", 20, 110)
    BENCHMARK("bench_757", 20, 20)
    BENCHMARK("bench_758", 20, 3)
    BENCHMARK("bench_759", 20, 78)
    BENCHMARK("bench_75", 20, 48)
    BENCHMARK("bench_760", 20, 14)
    BENCHMARK("bench_761", 20, 1)
    BENCHMARK("bench_762", 20, 38)
    BENCHMARK("bench_763", 20, 7)
    BENCHMARK("bench_764", 20, 2)
    BENCHMARK("bench_765", 20, 1)
    BENCHMARK("bench_766", 20, 14)
    BENCHMARK("bench_767", 20, 4)
    BENCHMARK("bench_768", 20, 2)
    BENCHMARK("bench_769", 20, 4)
    BENCHMARK("bench_76", 20, 66)
    BENCHMARK("bench_770", 20, 39)
    BENCHMARK("bench_771", 20, 8)
    BENCHMARK("bench_772", 20, 8)
    BENCHMARK("bench_773", 20, 8)
    BENCHMARK("bench_774", 20, 25)
    BENCHMARK("bench_775", 20, 46)
    BENCHMARK("bench_776", 20, 9)
    BENCHMARK("bench_777", 20, 2)
    BENCHMARK("bench_778", 20, 8)
    BENCHMARK("bench_779", 20, 1)
    BENCHMARK("bench_77", 20, 9)
    BENCHMARK("bench_780", 20, 29)
    BENCHMARK("bench_781", 20, 2)
    BENCHMARK("bench_782", 20, 15)
    BENCHMARK("bench_783", 20, 2)
    BENCHMARK("bench_784", 20, 63)
    BENCHMARK("bench_785", 20, 17)
    BENCHMARK("bench_786", 20, 1)
    BENCHMARK("bench_787", 20, 7)
    BENCHMARK("bench_788", 20, 9)
    BENCHMARK("bench_789", 20, 3)
    BENCHMARK("bench_78", 20, 6)
    BENCHMARK("bench_790", 20, 42)
    BENCHMARK("bench_791", 20, 19)
    BENCHMARK("bench_792", 20, 29)
    BENCHMARK("bench_793", 20, 15)
    BENCHMARK("bench_794", 20, 40)
    BENCHMARK("bench_795", 20, 3)
    BENCHMARK("bench_796", 20, 18)
    BENCHMARK("bench_797", 20, 4)
    BENCHMARK("bench_798", 20, 1)
    BENCHMARK("bench_799", 20, 14)
    BENCHMARK("bench_79", 20, 2)
    BENCHMARK("bench_7", 20, 6)
    BENCHMARK("bench_800", 20, 4)
    BENCHMARK("bench_801", 20, 9)
    BENCHMARK("bench_802", 20, 2)
    BENCHMARK("bench_803", 20, 2)
    BENCHMARK("bench_804", 20, 12)
    BENCHMARK("bench_805", 20, 5)
    BENCHMARK("bench_806", 20, 4)
    BENCHMARK("bench_807", 20, 37)
    BENCHMARK("bench_808", 20, 4)
    BENCHMARK("bench_809", 20, 1)
    BENCHMARK("bench_80", 20, 13)
    BENCHMARK("bench_810", 20, 32)
    BENCHMARK("bench_811", 20, 4)
    BENCHMARK("bench_812", 20, 8)
    BENCHMARK("bench_813", 20, 1)
    BENCHMARK("bench_814", 20, 3)
    BENCHMARK("bench_815", 20, 1)
    BENCHMARK("bench_816", 20, 18)
    BENCHMARK("bench_817", 20, 7)
    BENCHMARK("bench_818", 20, 31)
    BENCHMARK("bench_819", 20, 6)
    BENCHMARK("bench_81", 20, 8)
    BENCHMARK("bench_820", 20, 2)
    BENCHMARK("bench_821", 20, 1)
    BENCHMARK("bench_822", 20, 2)
    BENCHMARK("bench_823", 20, 6)
    BENCHMARK("bench_824", 20, 5)
    BENCHMARK("bench_825", 20, 30)
    BENCHMARK("bench_826", 20, 2)
    BENCHMARK("bench_827", 20, 14)
    BENCHMARK("bench_828", 20, 2)
    BENCHMARK("bench_829", 20, 120)
    BENCHMARK("bench_82", 20, 4)
    BENCHMARK("bench_830", 20, 4)
    BENCHMARK("bench_831", 20, 1)
    BENCHMARK("bench_832", 20, 6)
    BENCHMARK("bench_833", 20, 31)
    BENCHMARK("bench_834", 20, 18)
    BENCHMARK("bench_835", 20, 14)
    BENCHMARK("bench_836", 20, 4)
    BENCHMARK("bench_837", 20, 9)
    BENCHMARK("bench_838", 20, 10)
    BENCHMARK("bench_839", 20, 15)
    BENCHMARK("bench_83", 20, 3)
    BENCHMARK("bench_840", 20, 1)
    BENCHMARK("bench_841", 20, 46)
    BENCHMARK("bench_842", 20, 2)
    BENCHMARK("bench_843", 20, 8)
    BENCHMARK("bench_844", 20, 13)
    BENCHMARK("bench_845", 20, 10)
    BENCHMARK("bench_846", 20, 20)
    BENCHMARK("bench_847", 20, 1)
    BENCHMARK("bench_848", 20, 62)
    BENCHMARK("bench_849", 20, 5)
    BENCHMARK("bench_84", 20, 22)
    BENCHMARK("bench_850", 20, 2)
    BENCHMARK("bench_851", 20, 36)
    BENCHMARK("bench_852", 20, 3)
    BENCHMARK("bench_853", 20, 13)
    BENCHMARK("bench_854", 20, 10)
    BENCHMARK("bench_855", 20, 2)
    BENCHMARK("bench_856", 20, 9)
    BENCHMARK("bench_857", 20, 1)
    BENCHMARK("bench_858", 20, 3)
    BENCHMARK("bench_859", 20, 7)
    BENCHMARK("bench_85", 20, 2)
    BENCHMARK("bench_860", 20, 3)
    BENCHMARK("bench_861", 20, 1)
    BENCHMARK("bench_862", 20, 6)
    BENCHMARK("bench_863", 20, 9)
    BENCHMARK("bench_864", 20, 20)
    BENCHMARK("bench_865", 20, 4)
    BENCHMARK("bench_866", 20, 2)
    BENCHMARK("bench_867", 20, 1)
    BENCHMARK("bench_868", 20, 3)
    BENCHMARK("bench_869", 20, 7)
    BENCHMARK("bench_86", 20, 22)
    BENCHMARK("bench_870", 20, 1)
    BENCHMARK("bench_871", 20, 8)
    BENCHMARK("bench_872", 20, 10)
    BENCHMARK("bench_873", 20, 15)
    BENCHMARK("bench_874", 20, 5)
    BENCHMARK("bench_875", 20, 7)
    BENCHMARK("bench_876", 20, 36)
    BENCHMARK("bench_877", 20, 2)
    BENCHMARK("bench_878", 20, 9)
    BENCHMARK("bench_879", 20, 4)
    BENCHMARK("bench_87", 20, 41)
    BENCHMARK("bench_880", 20, 5)
    BENCHMARK("bench_881", 20, 21)
    BENCHMARK("bench_882", 20, 4)
    BENCHMARK("bench_883", 20, 16)
    BENCHMARK("bench_884", 20, 12)
    BENCHMARK("bench_885", 20, 1)
    BENCHMARK("bench_886", 20, 13)
    BENCHMARK("bench_887", 20, 37)
    BENCHMARK("bench_888", 20, 3)
    BENCHMARK("bench_889", 20, 17)
    BENCHMARK("bench_88", 20, 26)
    BENCHMARK("bench_890", 20, 2)
    BENCHMARK("bench_891", 20, 9)
    BENCHMARK("bench_892", 20, 14)
    BENCHMARK("bench_893", 20, 11)
    BENCHMARK("bench_894", 20, 3)
    BENCHMARK("bench_895", 20, 4)
    BENCHMARK("bench_896", 20, 4)
    BENCHMARK("bench_897", 20, 10)
    BENCHMARK("bench_898", 20, 11)
    BENCHMARK("bench_899", 20, 4)
    BENCHMARK("bench_89", 20, 4)
    BENCHMARK("bench_8", 20, 1)
    BENCHMARK("bench_900", 20, 42)
    BENCHMARK("bench_901", 20, 26)
    BENCHMARK("bench_902", 20, 3)
    BENCHMARK("bench_903", 20, 8)
    BENCHMARK("bench_904", 20, 2)
    BENCHMARK("bench_905", 20, 4)
    BENCHMARK("bench_906", 20, 3)
    BENCHMARK("bench_907", 20, 2)
    BENCHMARK("bench_908", 20, 4)
    BENCHMARK("bench_909", 20, 50)
    BENCHMARK("bench_90", 20, 2)
    BENCHMARK("bench_910", 20, 4)
    BENCHMARK("bench_911", 20, 9)
    BENCHMARK("bench_912", 20, 10)
    BENCHMARK("bench_913", 20, 2)
    BENCHMARK("bench_914", 20, 1)
    BENCHMARK("bench_915", 20, 3)
    BENCHMARK("bench_916", 20, 6)
    BENCHMARK("bench_917", 20, 2)
    BENCHMARK("bench_918", 20, 51)
    BENCHMARK("bench_919", 20, 15)
    BENCHMARK("bench_91", 20, 4)
    BENCHMARK("bench_920", 20, 1)
    BENCHMARK("bench_921", 20, 18)
    BENCHMARK("bench_922", 20, 2)
    BENCHMARK("bench_923", 20, 7)
    BENCHMARK("bench_924", 20, 4)
    BENCHMARK("bench_925", 20, 8)
    BENCHMARK("bench_926", 20, 16)
    BENCHMARK("bench_927", 20, 16)
    BENCHMARK("bench_928", 20, 1)
    BENCHMARK("bench_929", 20, 19)
    BENCHMARK("bench_92", 20, 16)
    BENCHMARK("bench_930", 20, 6)
    BENCHMARK("bench_931", 20, 10)
    BENCHMARK("bench_932", 20, 18)
    BENCHMARK("bench_933", 20, 2)
    BENCHMARK("bench_934", 20, 1)
    BENCHMARK("bench_935", 20, 11)
    BENCHMARK("bench_936", 20, 6)
    BENCHMARK("bench_937", 20, 2)
    BENCHMARK("bench_938", 20, 26)
    BENCHMARK("bench_939", 20, 20)
    BENCHMARK("bench_93", 20, 12)
    BENCHMARK("bench_940", 20, 1)
    BENCHMARK("bench_941", 20, 2)
    BENCHMARK("bench_942", 20, 2)
    BENCHMARK("bench_943", 20, 14)
    BENCHMARK("bench_944", 20, 14)
    BENCHMARK("bench_945", 20, 4)
    BENCHMARK("bench_946", 20, 7)
    BENCHMARK("bench_947", 20, 3)
    BENCHMARK("bench_948", 20, 2)
    BENCHMARK("bench_949", 20, 28)
    BENCHMARK("bench_94", 20, 8)
    BENCHMARK("bench_950", 20, 5)
    BENCHMARK("bench_951", 20, 19)
    BENCHMARK("bench_952", 20, 1)
    BENCHMARK("bench_953", 20, 30)
    BENCHMARK("bench_954", 20, 3)
    BENCHMARK("bench_955", 20, 5)
    BENCHMARK("bench_956", 20, 4)
    BENCHMARK("bench_957", 20, 1)
    BENCHMARK("bench_958", 20, 1)
    BENCHMARK("bench_959", 20, 15)
    BENCHMARK("bench_95", 20, 11)
    BENCHMARK("bench_960", 20, 1)
    BENCHMARK("bench_961", 20, 12)
    BENCHMARK("bench_962", 20, 29)
    BENCHMARK("bench_963", 20, 96)
    BENCHMARK("bench_964", 20, 16)
    BENCHMARK("bench_965", 20, 7)
    BENCHMARK("bench_966", 20, 8)
    BENCHMARK("bench_967", 20, 5)
    BENCHMARK("bench_968", 20, 12)
    BENCHMARK("bench_969", 20, 24)
    BENCHMARK("bench_96", 20, 1)
    BENCHMARK("bench_970", 20, 1)
    BENCHMARK("bench_971", 20, 1)
    BENCHMARK("bench_972", 20, 4)
    BENCHMARK("bench_973", 20, 21)
    BENCHMARK("bench_974", 20, 2)
    BENCHMARK("bench_975", 20, 2)
    BENCHMARK("bench_976", 20, 6)
    BENCHMARK("bench_977", 20, 1)
    BENCHMARK("bench_978", 20, 5)
    BENCHMARK("bench_979", 20, 1)
    BENCHMARK("bench_97", 20, 6)
    BENCHMARK("bench_980", 20, 5)
    BENCHMARK("bench_981", 20, 4)
    BENCHMARK("bench_982", 20, 6)
    BENCHMARK("bench_983", 20, 1)
    BENCHMARK("bench_984", 20, 2)
    BENCHMARK("bench_985", 20, 12)
    BENCHMARK("bench_986", 20, 17)
    BENCHMARK("bench_987", 20, 21)
    BENCHMARK("bench_988", 20, 5)
    BENCHMARK("bench_989", 20, 8)
    BENCHMARK("bench_98", 20, 6)
    BENCHMARK("bench_990", 20, 10)
    BENCHMARK("bench_991", 20, 22)
    BENCHMARK("bench_992", 20, 4)
    BENCHMARK("bench_993", 20, 2)
    BENCHMARK("bench_994", 20, 14)
    BENCHMARK("bench_995", 20, 3)
    BENCHMARK("bench_996", 20, 5)
    BENCHMARK("bench_997", 20, 12)
    BENCHMARK("bench_998", 20, 7)
    BENCHMARK("bench_999", 20, 23)
    BENCHMARK("bench_99", 20, 5)
    BENCHMARK("bench_9", 20, 27)
    main()
